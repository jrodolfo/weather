//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.15 at 12:39:23 PM ADT 
//


package com.jrodolfo.weather.model.jaxbgenerated.site;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SiteData }
     * 
     */
    public SiteData createSiteData() {
        return new SiteData();
    }

    /**
     * Create an instance of {@link DateStampType }
     * 
     */
    public DateStampType createDateStampType() {
        return new DateStampType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link WarningsType }
     * 
     */
    public WarningsType createWarningsType() {
        return new WarningsType();
    }

    /**
     * Create an instance of {@link CurrentConditionsType }
     * 
     */
    public CurrentConditionsType createCurrentConditionsType() {
        return new CurrentConditionsType();
    }

    /**
     * Create an instance of {@link ForecastGroupTypeFull }
     * 
     */
    public ForecastGroupTypeFull createForecastGroupTypeFull() {
        return new ForecastGroupTypeFull();
    }

    /**
     * Create an instance of {@link YesterdayConditionsType }
     * 
     */
    public YesterdayConditionsType createYesterdayConditionsType() {
        return new YesterdayConditionsType();
    }

    /**
     * Create an instance of {@link RiseSetType }
     * 
     */
    public RiseSetType createRiseSetType() {
        return new RiseSetType();
    }

    /**
     * Create an instance of {@link AlmanacType }
     * 
     */
    public AlmanacType createAlmanacType() {
        return new AlmanacType();
    }

    /**
     * Create an instance of {@link HourType }
     * 
     */
    public HourType createHourType() {
        return new HourType();
    }

    /**
     * Create an instance of {@link CloudPrecipType }
     * 
     */
    public CloudPrecipType createCloudPrecipType() {
        return new CloudPrecipType();
    }

    /**
     * Create an instance of {@link PressureTypeCond }
     * 
     */
    public PressureTypeCond createPressureTypeCond() {
        return new PressureTypeCond();
    }

    /**
     * Create an instance of {@link TimeType }
     * 
     */
    public TimeType createTimeType() {
        return new TimeType();
    }

    /**
     * Create an instance of {@link NameType }
     * 
     */
    public NameType createNameType() {
        return new NameType();
    }

    /**
     * Create an instance of {@link VisibilitySubTypeForecast }
     * 
     */
    public VisibilitySubTypeForecast createVisibilitySubTypeForecast() {
        return new VisibilitySubTypeForecast();
    }

    /**
     * Create an instance of {@link DayType }
     * 
     */
    public DayType createDayType() {
        return new DayType();
    }

    /**
     * Create an instance of {@link CalculatedHumidexType }
     * 
     */
    public CalculatedHumidexType createCalculatedHumidexType() {
        return new CalculatedHumidexType();
    }

    /**
     * Create an instance of {@link RegionalNormalsType }
     * 
     */
    public RegionalNormalsType createRegionalNormalsType() {
        return new RegionalNormalsType();
    }

    /**
     * Create an instance of {@link WindSpeedType }
     * 
     */
    public WindSpeedType createWindSpeedType() {
        return new WindSpeedType();
    }

    /**
     * Create an instance of {@link CountryType }
     * 
     */
    public CountryType createCountryType() {
        return new CountryType();
    }

    /**
     * Create an instance of {@link WarningEventType }
     * 
     */
    public WarningEventType createWarningEventType() {
        return new WarningEventType();
    }

    /**
     * Create an instance of {@link PrecipTypeForecast }
     * 
     */
    public PrecipTypeForecast createPrecipTypeForecast() {
        return new PrecipTypeForecast();
    }

    /**
     * Create an instance of {@link VisibilityTypeForecast }
     * 
     */
    public VisibilityTypeForecast createVisibilityTypeForecast() {
        return new VisibilityTypeForecast();
    }

    /**
     * Create an instance of {@link UvType }
     * 
     */
    public UvType createUvType() {
        return new UvType();
    }

    /**
     * Create an instance of {@link PeriodType }
     * 
     */
    public PeriodType createPeriodType() {
        return new PeriodType();
    }

    /**
     * Create an instance of {@link AccumulationType }
     * 
     */
    public AccumulationType createAccumulationType() {
        return new AccumulationType();
    }

    /**
     * Create an instance of {@link ForecastTypeFull }
     * 
     */
    public ForecastTypeFull createForecastTypeFull() {
        return new ForecastTypeFull();
    }

    /**
     * Create an instance of {@link TemperatureType }
     * 
     */
    public TemperatureType createTemperatureType() {
        return new TemperatureType();
    }

    /**
     * Create an instance of {@link SnowLevelType }
     * 
     */
    public SnowLevelType createSnowLevelType() {
        return new SnowLevelType();
    }

    /**
     * Create an instance of {@link PopType }
     * 
     */
    public PopType createPopType() {
        return new PopType();
    }

    /**
     * Create an instance of {@link ComfortType }
     * 
     */
    public ComfortType createComfortType() {
        return new ComfortType();
    }

    /**
     * Create an instance of {@link WindsType }
     * 
     */
    public WindsType createWindsType() {
        return new WindsType();
    }

    /**
     * Create an instance of {@link WindType }
     * 
     */
    public WindType createWindType() {
        return new WindType();
    }

    /**
     * Create an instance of {@link HumidexType }
     * 
     */
    public HumidexType createHumidexType() {
        return new HumidexType();
    }

    /**
     * Create an instance of {@link RainType }
     * 
     */
    public RainType createRainType() {
        return new RainType();
    }

    /**
     * Create an instance of {@link MonthType }
     * 
     */
    public MonthType createMonthType() {
        return new MonthType();
    }

    /**
     * Create an instance of {@link RiseSetElementType }
     * 
     */
    public RiseSetElementType createRiseSetElementType() {
        return new RiseSetElementType();
    }

    /**
     * Create an instance of {@link PrecipSubTypeForecast }
     * 
     */
    public PrecipSubTypeForecast createPrecipSubTypeForecast() {
        return new PrecipSubTypeForecast();
    }

    /**
     * Create an instance of {@link StationType }
     * 
     */
    public StationType createStationType() {
        return new StationType();
    }

    /**
     * Create an instance of {@link RegionType }
     * 
     */
    public RegionType createRegionType() {
        return new RegionType();
    }

    /**
     * Create an instance of {@link FrostType }
     * 
     */
    public FrostType createFrostType() {
        return new FrostType();
    }

    /**
     * Create an instance of {@link ProvinceType }
     * 
     */
    public ProvinceType createProvinceType() {
        return new ProvinceType();
    }

    /**
     * Create an instance of {@link SnowfallWaterEquivType }
     * 
     */
    public SnowfallWaterEquivType createSnowfallWaterEquivType() {
        return new SnowfallWaterEquivType();
    }

    /**
     * Create an instance of {@link SnowfallType }
     * 
     */
    public SnowfallType createSnowfallType() {
        return new SnowfallType();
    }

    /**
     * Create an instance of {@link AbbreviatedForecastType }
     * 
     */
    public AbbreviatedForecastType createAbbreviatedForecastType() {
        return new AbbreviatedForecastType();
    }

    /**
     * Create an instance of {@link RelativeHumidityType }
     * 
     */
    public RelativeHumidityType createRelativeHumidityType() {
        return new RelativeHumidityType();
    }

    /**
     * Create an instance of {@link CalculatedWindChillType }
     * 
     */
    public CalculatedWindChillType createCalculatedWindChillType() {
        return new CalculatedWindChillType();
    }

    /**
     * Create an instance of {@link WindChillType }
     * 
     */
    public WindChillType createWindChillType() {
        return new WindChillType();
    }

    /**
     * Create an instance of {@link VisibilityTypeCond }
     * 
     */
    public VisibilityTypeCond createVisibilityTypeCond() {
        return new VisibilityTypeCond();
    }

    /**
     * Create an instance of {@link WindBearingType }
     * 
     */
    public WindBearingType createWindBearingType() {
        return new WindBearingType();
    }

    /**
     * Create an instance of {@link PrecipType }
     * 
     */
    public PrecipType createPrecipType() {
        return new PrecipType();
    }

    /**
     * Create an instance of {@link PressuresType }
     * 
     */
    public PressuresType createPressuresType() {
        return new PressuresType();
    }

    /**
     * Create an instance of {@link PressureTypeForecast }
     * 
     */
    public PressureTypeForecast createPressureTypeForecast() {
        return new PressureTypeForecast();
    }

    /**
     * Create an instance of {@link IconCodeType }
     * 
     */
    public IconCodeType createIconCodeType() {
        return new IconCodeType();
    }

    /**
     * Create an instance of {@link TemperaturesType }
     * 
     */
    public TemperaturesType createTemperaturesType() {
        return new TemperaturesType();
    }

}
